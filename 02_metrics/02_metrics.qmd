---
title: "02_metrics"
author: "matheusmoroti"
format: html
editor: visual
---

### 0. Libraries

```{r}
library(tidyverse)  # data science handling
library(data.table) # data science handling
library(terra)      # geospatial tool
library(sf)         # spatial data package
library(subniche)   # OMI analysis
```

### 1. Load data

##### 1.1. Distribution data

```{r}
# Community data from TetrapodTraits
vert_assemblages <- data.table::fread("Tetrapod_360.csv",
                                      stringsAsFactors=T)

# Shapefile
grid_cells_sf <- sf::st_read(dsn = file.path(
    "..", "..", "wallacean_time", "Shapefiles", "TetrapodTraits_community"),
    layer='gridcells_110km'
)
```

##### 1.2. Climate data

```{r}
# Marine ecosystem
grid_marine <- sf::st_read(dsn = file.path(
    "shapefile"),
    layer='grid_marine_bioclimate'
)

sea_temp <- grid_marine %>%
 select(Cl_I110, X_meanmean,X_rangemean,X_maxmean,X_minmean) %>%
 st_drop_geometry()

# Terrestrial ecosystem 
grid_terrestrial <- sf::st_read(dsn = file.path(
    "..", "shapefile"),
    layer='grid_terrestrial_chelsa'
)

terrestrial_temp <- grid_terrestrial %>%
 select(Cl_I110, X_bio15_mea, X_bio16_mea, 
        X_bio17_mea, X_bio01_mea, X_bio04_mea,
        X_bio05_mea, X_bio06_mea, X_bio12_mea) %>%
 st_drop_geometry() %>%
 group_by(Cl_I110) %>%
 summarise(across(everything(), mean))
```

##### 1.3. Species list

Herein, we use only species with body size or body mass data observed (non-imputed). For this reason, we use the BAMM trait file for each group. Those files were generated after run *01_extraction.qmd*.

```{r}
amphibia_trait <- read.table(file.path(
  "..",
  "BAMM",
  "Amphibia",
  "Amphibia_body_traits.txt"))

reptilia_trait <- read.table(file.path(
  "..",
  "BAMM",
  "Reptilia",
  "Reptilia_body_traits.txt"))

aves_trait <- read.table(file.path(
  "..",
  "BAMM",
  "Aves",
  "Aves_body_traits.txt")) 

mammalia_trait <- read.table(file.path(
  "..", 
  "BAMM",
  "Mammalia",
  "Mammalia_body_traits.txt")) 

all_species <- bind_rows(
  amphibia_trait,
  reptilia_trait,
  aves_trait,
  mammalia_trait
) %>%
  rename(Scientific.Name = V1,
       Body = V2) %>%
  mutate(Scientific.Name = str_replace_all(Scientific.Name, "_", " "))
```

##### 1.3. TetrapodTraits

```{r}
TetraData <- data.table::fread(
  file.path("..", "traits", "TetrapodTraits_1.0.0.csv"))

# Species list with observed body size/mass
species <- all_species %>% # 31682
 pull(Scientific.Name)

TetraDataHabitat <- TetraData %>% 
  mutate(Scientific.Name = str_replace_all(Scientific.Name, "_", " ")) %>%
  filter(Scientific.Name %in% species) %>% # apenas spp com tamanho do corpo observado
  select("Scientific.Name","Class", "EcoTer", "EcoFresh", "EcoMar") 

# Ver combinações únicas dos três tipos de habitat
TetraDataHabitat %>%
  count(EcoTer, EcoFresh, EcoMar) %>%
  arrange(desc(n))
```

##### 1.3. Venn Diagram of Major Habitat em TetrapodTraits

```{r}
venn_data <- TetraDataHabitat %>%
  count(EcoTer, EcoFresh, EcoMar) %>%
  filter(!is.na(EcoTer)) %>%  # remove o caso NA
  mutate(comb = case_when(
    EcoTer == 1 & EcoFresh == 0 & EcoMar == 0 ~ "Terrestrial",
    EcoTer == 1 & EcoFresh == 1 & EcoMar == 0 ~ "Terrestrial&Freshwater",
    EcoTer == 1 & EcoFresh == 1 & EcoMar == 1 ~ "Terrestrial&Freshwater&Marine",
    EcoTer == 1 & EcoFresh == 0 & EcoMar == 1 ~ "Terrestrial&Marine",
    EcoTer == 0 & EcoFresh == 1 & EcoMar == 0 ~ "Freshwater",
    EcoTer == 0 & EcoFresh == 0 & EcoMar == 1 ~ "Marine",
    EcoTer == 0 & EcoFresh == 1 & EcoMar == 1 ~ "Freshwater&Marine"
  )) %>%
  select(comb, n) %>%
  deframe()

fit <- eulerr::euler(venn_data)

plot(fit,
     fills = c("orange", "deepskyblue", "forestgreen"),
     labels = list(font = 2),
     edges = TRUE,
     quantities = TRUE)
```

##### 1.4. Obtain species in TetrapodTraits according major habitat and dependence of climate

```{r}
# exclusivamente em ambientes nao-marinhos
TetraDataTerrestrial <- TetraDataHabitat %>%
  filter(EcoMar == 0 & (EcoTer == 1 | EcoFresh == 1)) #%>% 
  #pull(Scientific.Name)
table(TetraDataTerrestrial$Class)

# Amphibia
amphibia_list_terrestrial <- TetraDataTerrestrial %>%
  filter(Class == "Amphibia") %>%
  pull(Scientific.Name)
# Reptilia
reptilia_list_terrestrial <- TetraDataTerrestrial %>%
  filter(Class == "Reptilia") %>%
  pull(Scientific.Name)
# Aves
aves_list_terrestrial <- TetraDataTerrestrial %>%
  filter(Class == "Aves") %>%
  pull(Scientific.Name)
# Mammalia
mammalia_list_terrestrial <- TetraDataTerrestrial %>%
  filter(Class == "Mammalia") %>%
  pull(Scientific.Name)

# TODO em desenvolvimento
# somente em ambientes marinhos
TetraDataMarine <- TetraDataHabitat %>%
    filter(EcoMar == 1 & EcoTer == 0 & EcoFresh == 0) #%>% # exclusivamente marinhas
    #pull(Scientific.Name)
table(TetraDataMarine$Class)

# sujeitas a variaveis marinhas e terrestres
TetraTransition <- TetraDataHabitat %>%
    filter(EcoMar == 1 & (EcoTer == 1 | EcoFresh == 1)) #%>%
    #pull(Scientific.Name)
table(TetraTransition$Class)
View(TetraTransition)
```

### 2. Data processing

##### 2.1. Obtain species matrix with climate data

###### Amphibia

```{r}
# Primeira coisa, pegar apenas as comunidades de anfibios
# Por isso filramos apenas os nomes das especies que aparecem
# na lista de cada grupo
vert_assemblages_amphibia <- vert_assemblages %>%
 filter(Scientific.Name %in% amphibia_list_terrestrial) 

# Com as grids de distribuicao de cada grupo, geramos uma
# lista que ira receber os dados climaticos baseados nos
# id das celulas
assemblages_terrestrial_amphibia <- vert_assemblages_amphibia %>%
 distinct(Cell_Id110) %>%
 arrange(Cell_Id110)
nrow(assemblages_terrestrial_amphibia) # 11353 cells

# Pela id da celula, juntamos os dataframes
# pegamos os numeros de celulas dos anfibios e unimos
# com os dados bioclimaticos extraidos
amp_assemblages_terrestrial_climate <- left_join(
    assemblages_terrestrial_amphibia,
     terrestrial_temp, 
     by = c("Cell_Id110" = "Cl_I110"))

# Tirando grids com NA (nao permitido pela analise de ordenacao OMI)
# 60 grids sem dados
amp_terrestrial_climate <- remove_missing(amp_assemblages_terrestrial_climate) 

# Grids apontadas para a ocorrencia da especie
# Mas sem dados climaticos serao removidas
amphibia_assemblages_terrestrial <- vert_assemblages_amphibia %>%
 filter(Cell_Id110 %in% amp_terrestrial_climate$Cell_Id110)

# Obtain presence/ausence matrix
amphibia_assemblages_terrestrial_matrix <- dcast(
  data = amphibia_assemblages_terrestrial,
  formula = Cell_Id110 ~ Scientific.Name,
  fun.aggregate = function(x) as.integer(length(x) > 0),
  value.var = "Cell_Id110",
  fill = 0  # Preenche grids sem occ com 0
) %>%
 arrange(Cell_Id110) %>%
 column_to_rownames(var = "Cell_Id110") 

ncol(amphibia_assemblages_terrestrial_matrix) # 7080 spp
nrow(amphibia_assemblages_terrestrial_matrix) # 11293 grids cells
```

###### Reptilia

```{r}
# Primeira coisa, pegar apenas as comunidades de anfibios
# Por isso filramos apenas os nomes das especies que aparecem
# na lista de cada grupo
vert_assemblages_reptilia <- vert_assemblages %>%
 filter(Scientific.Name %in% reptilia_list_terrestrial) 

# Com as grids de distribuicao de cada grupo, geramos uma
# lista que ira receber os dados climaticos baseados nos
# id das celulas unicas
assemblages_terrestrial_reptilia <- vert_assemblages_reptilia %>%
 distinct(Cell_Id110) %>%
 arrange(Cell_Id110)
nrow(assemblages_terrestrial_reptilia) # 11885 cells

# Pela id da celula, juntamos os dataframes
# pegamos os numeros de celulas dos anfibios e unimos
# com os dados bioclimaticos extraidos
assemblages_terrestrial_climate <- left_join(
    assemblages_terrestrial_reptilia,
     terrestrial_temp, 
     by = c("Cell_Id110" = "Cl_I110"))

# Tirando grids com NA (nao permitido pela analise de ordenacao OMI)
# TODO 489 grids removidas
terrestrial_climate <- remove_missing(assemblages_terrestrial_climate) 

# Grids apontadas para a ocorrencia da especie
# Mas sem dados climaticos serao removidas
reptilia_assemblages_terrestrial <- vert_assemblages_reptilia %>%
 filter(Cell_Id110 %in% terrestrial_climate$Cell_Id110)

# Obtain presence/ausence matrix
reptilia_assemblages_terrestrial_matrix <- dcast(
  data = reptilia_assemblages_terrestrial,
  formula = Cell_Id110 ~ Scientific.Name,
  fun.aggregate = function(x) as.integer(length(x) > 0),
  value.var = "Cell_Id110",
  fill = 0  # Preenche grids sem occ com 0
) %>%
 arrange(Cell_Id110) %>%
 column_to_rownames(var = "Cell_Id110") 

ncol(reptilia_assemblages_terrestrial_matrix) # 9556 spp.
nrow(reptilia_assemblages_terrestrial_matrix) # 11396 grids cells
```

###### Aves

```{r}
# Primeira coisa, pegar apenas as comunidades de anfibios
# Por isso filramos apenas os nomes das especies que aparecem
# na lista de cada grupo
vert_assemblages_aves <- vert_assemblages %>%
 filter(Scientific.Name %in% aves_list_terrestrial) 

# Com as grids de distribuicao de cada grupo, geramos uma
# lista que ira receber os dados climaticos baseados nos
# id das celulas unicas
assemblages_terrestrial_aves <- vert_assemblages_aves %>%
 distinct(Cell_Id110) %>%
 arrange(Cell_Id110)
nrow(assemblages_terrestrial_aves) # 14687 cells

# Pela id da celula, juntamos os dataframes
# pegamos os numeros de celulas dos anfibios e unimos
# com os dados bioclimaticos extraidos
assemblages_terrestrial_climate <- left_join(
    assemblages_terrestrial_aves,
     terrestrial_temp, 
     by = c("Cell_Id110" = "Cl_I110"))

# Tirando grids com NA (nao permitido pela analise de ordenacao OMI)
# TODO 1540 grids removidas
terrestrial_climate <- remove_missing(assemblages_terrestrial_climate) 

# Grids apontadas para a ocorrencia da especie
# Mas sem dados climaticos serao removidas
aves_assemblages_terrestrial <- vert_assemblages_aves %>%
 filter(Cell_Id110 %in% terrestrial_climate$Cell_Id110)

# Obtain presence/ausence matrix
aves_assemblages_terrestrial_matrix <- dcast(
  data = aves_assemblages_terrestrial,
  formula = Cell_Id110 ~ Scientific.Name,
  fun.aggregate = function(x) as.integer(length(x) > 0),
  value.var = "Cell_Id110",
  fill = 0  # Preenche grids sem occ com 0
) %>%
 arrange(Cell_Id110) %>%
 column_to_rownames(var = "Cell_Id110") 

ncol(aves_assemblages_terrestrial_matrix) # 8600 spp.
nrow(aves_assemblages_terrestrial_matrix) # 13147 grids cells
```

###### Mammalia

```{r}
# Primeira coisa, pegar apenas as comunidades de anfibios
# Por isso filramos apenas os nomes das especies que aparecem
# na lista de cada grupo
vert_assemblages_mammalia <- vert_assemblages %>%
 filter(Scientific.Name %in% mammalia_list_terrestrial) 

# Com as grids de distribuicao de cada grupo, geramos uma
# lista que ira receber os dados climaticos baseados nos
# id das celulas unicas
assemblages_terrestrial_mammalia <- vert_assemblages_mammalia %>%
 distinct(Cell_Id110) %>%
 arrange(Cell_Id110)
nrow(assemblages_terrestrial_mammalia) # 13631 cells

# Pela id da celula, juntamos os dataframes
# pegamos os numeros de celulas dos anfibios e unimos
# com os dados bioclimaticos extraidos
assemblages_terrestrial_climate <- left_join(
    assemblages_terrestrial_mammalia,
     terrestrial_temp, 
     by = c("Cell_Id110" = "Cl_I110"))

# Tirando grids com NA (nao permitido pela analise de ordenacao OMI)
# TODO 480 grids removidas
terrestrial_climate <- remove_missing(assemblages_terrestrial_climate) 

# Grids apontadas para a ocorrencia da especie
# Mas sem dados climaticos serao removidas
mammalia_assemblages_terrestrial <- vert_assemblages_mammalia %>%
 filter(Cell_Id110 %in% terrestrial_climate$Cell_Id110)

# Obtain presence/ausence matrix
mammalia_assemblages_terrestrial_matrix <- dcast(
  data = mammalia_assemblages_terrestrial,
  formula = Cell_Id110 ~ Scientific.Name,
  fun.aggregate = function(x) as.integer(length(x) > 0),
  value.var = "Cell_Id110",
  fill = 0  # Preenche grids sem occ com 0
) %>%
 arrange(Cell_Id110) %>%
 column_to_rownames(var = "Cell_Id110") 

ncol(mammalia_assemblages_terrestrial_matrix) # 5191 spp.
nrow(mammalia_assemblages_terrestrial_matrix) # 13151 grids cells
```

### 3. Niche metrics

##### 3.1. VIF climate variables

```{r}
# VIF > 10
vif_amp <- usdm::vifstep(amp_terrestrial_climate[,-1], th=10) # identify collinear variables that should be excluded
terrestrial_climate_amp <- usdm::exclude(
  amp_terrestrial_climate[,-1],
  vif_amp) 
```

##### 3.2. Outlying Mean Indexes (OMI)

```{r}
# Amphibia
dudi_amphibia_terrestre <- dudi.pca(amp_terrestrial_climate[,-1],
                           scale = TRUE,
                           scan = FALSE)
niche_amphibia_terrestrial <- niche(dudi_amphibia_terrestre,
                           amphibia_assemblages_terrestrial_matrix,
                           scann = FALSE) 
niche_amphibia_terrestrial_df <- as.data.frame(niche.param(niche_terrestrial))

# Reptilia
dudi_amphibia_terrestre <- dudi.pca(amp_terrestrial_climate[,-1],
                           scale = TRUE,
                           scan = FALSE)
niche_amphibia_terrestrial <- niche(dudi_amphibia_terrestre,
                           amphibia_assemblages_terrestrial_matrix,
                           scann = FALSE) 
niche_amphibia_terrestrial_df <- as.data.frame(niche.param(niche_terrestrial))

# Aves
dudi_amphibia_terrestre <- dudi.pca(amp_terrestrial_climate[,-1],
                           scale = TRUE,
                           scan = FALSE)
niche_amphibia_terrestrial <- niche(dudi_amphibia_terrestre,
                           amphibia_assemblages_terrestrial_matrix,
                           scann = FALSE) 
niche_amphibia_terrestrial_df <- as.data.frame(niche.param(niche_terrestrial))

# Mammalia
dudi_amphibia_terrestre <- dudi.pca(amp_terrestrial_climate[,-1],
                           scale = TRUE,
                           scan = FALSE)
niche_amphibia_terrestrial <- niche(dudi_amphibia_terrestre,
                           amphibia_assemblages_terrestrial_matrix,
                           scann = FALSE) 
niche_amphibia_terrestrial_df <- as.data.frame(niche.param(niche_terrestrial))
```

### 4. Save data

```{r}
# Amphibia
write.table(niche_amphibia_terrestrial_df,
            "omi_data/niche_amphibia_terrestrial.txt", 
            sep=",", quote=FALSE, row.names = T)
```
