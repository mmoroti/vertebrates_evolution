---
title: "02_metrics"
author: "matheusmoroti"
format: html
editor: visual
---

### 0. Libraries

```{r}
library(tidyverse)  # data science handling
library(data.table) # data science handling
library(terra)     # geospatial tool
library(sf) # spatial data package
library(subniche) # subniche
```

### 1. Load data

##### 1.1. Distribution data

```{r}
# Community data from TetrapodTraits
vert_assemblages <- data.table::fread("02_metrics/Tetrapod_360.csv",
                                      stringsAsFactors=T)

# Shapefile
grid_cells_sf <- sf::st_read(dsn = file.path(
    "..", "wallacean_time", "Shapefiles", "TetrapodTraits_community"),
    layer='gridcells_110km'
)
```

##### 1.2. Climate data

```{r}
#climate_assemblages <- data.table::fread("02_metrics/SpatialData_110km.csv",
#                                      stringsAsFactors=T) 
grid_marine <- sf::st_read(dsn = file.path(
    "shapefile"),
    layer='grid_marine_bioclimate'
)

sea_temp <- grid_marine %>%
 select(Cl_I110, X_meanmean,X_rangemean,X_maxmean,X_minmean) %>%
 st_drop_geometry()

grid_terrestrial <- sf::st_read(dsn = file.path(
    "shapefile"),
    layer='grid_terrestrial_chelsa'
)

terrestrial_temp <- grid_terrestrial %>%
 select(Cl_I110, X_bio15_mea, X_bio16_mea, 
        X_bio17_mea, X_bio01_mea, X_bio04_mea,
        X_bio05_mea, X_bio06_mea, X_bio12_mea) %>%
 st_drop_geometry() %>%
 group_by(Cl_I110) %>%
 summarise(across(everything(), mean))
```

```{r}
# Climate data from CHELSA
# annual mean temperature
#Bio01 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio1_1981-2010_V.2.1.tif") 
# temperature seasonality
#Bio04 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio4_1981-2010_V.2.1.tif") 
# maximum temperature of the warmest month
#Bio05 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio5_1981-2010_V.2.1.tif") 
# minimum temperature of the coldest month
#Bio06 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio6_1981-2010_V.2.1.tif") 
# annual precipitation
#Bio12 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio12_1981-2010_V.2.1.tif") 
# precipitation seasonality
#Bio15 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio15_1981-2010_V.2.1.tif") 
# precipitation of the wettest quarter
#Bio16 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio16_1981-2010_V.2.1.tif") 
# precipitation of the driest quarter
#Bio17 <- rast("https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL/climatologies/1981-2010/bio/CHELSA_bio17_1981-2010_V.2.1.tif") 
```

##### 1.3. Species list

Herein, we use only species with body size or body mass data observed (non-imputed). For this reason, we use the BAMM trait file for each group. Those files were generated after run *01_extraction.qmd*.

```{r}
amphibia_trait <- read.table(file.path("BAMM",
                                      "Amphibia",
                                      "Amphibia_body_traits.txt"))
reptilia_trait <- read.table(file.path("BAMM",
                                      "Reptilia",
                                      "Reptilia_body_traits.txt"))
aves_trait <- read.table(file.path("BAMM",
                                      "Aves",
                                      "Aves_body_traits.txt"))
mammalia_trait <- read.table(file.path("BAMM",
                                      "Mammalia",
                                      "Mammalia_body_traits.txt"))

all_species <- bind_rows(amphibia_trait,
         reptilia_trait,
         aves_trait,
         mammalia_trait) %>%
 rename(Scientific.Name = V1,
       Body = V2) %>%
 mutate(Scientific.Name = str_replace_all(Scientific.Name, "_", " "))
```

##### 1.3. TetrapodTraits

```{r}
TetraData <- data.table::fread("traits/TetrapodTraits_1.0.0.csv")

# Species list with observed body size/mass
species <- all_species %>% # 31682
 mutate(Scientific.Name = str_replace_all(Scientific.Name, "_", " ")) %>%
 pull(Scientific.Name)

TetraDataHabitat <- TetraData %>% 
  mutate(Scientific.Name = str_replace_all(Scientific.Name, "_", " ")) %>%
  filter(Scientific.Name %in% species) %>% # apenas spp com tamanho do corpo observado
  select("Scientific.Name","Class", "EcoTer", "EcoFresh", "EcoMar") 

# Ver combinações únicas dos três tipos de habitat
TetraDataHabitat %>%
  count(EcoTer, EcoFresh, EcoMar) %>%
  arrange(desc(n))
```

##### 1.4. Venn Diagram of Major Habitat em TetrapodTraits

```{r}
venn_data <- TetraDataHabitat %>%
  count(EcoTer, EcoFresh, EcoMar) %>%
  filter(!is.na(EcoTer)) %>%  # remove o caso NA
  mutate(comb = case_when(
    EcoTer == 1 & EcoFresh == 0 & EcoMar == 0 ~ "Terrestrial",
    EcoTer == 1 & EcoFresh == 1 & EcoMar == 0 ~ "Terrestrial&Freshwater",
    EcoTer == 1 & EcoFresh == 1 & EcoMar == 1 ~ "Terrestrial&Freshwater&Marine",
    EcoTer == 1 & EcoFresh == 0 & EcoMar == 1 ~ "Terrestrial&Marine",
    EcoTer == 0 & EcoFresh == 1 & EcoMar == 0 ~ "Freshwater",
    EcoTer == 0 & EcoFresh == 0 & EcoMar == 1 ~ "Marine",
    EcoTer == 0 & EcoFresh == 1 & EcoMar == 1 ~ "Freshwater&Marine"
  )) %>%
  select(comb, n) %>%
  deframe()

fit <- euler(venn_data)

plot(fit,
     fills = c("forestgreen", "deepskyblue", "orange"),
     labels = list(font = 2),
     edges = TRUE,
     quantities = TRUE)
```

##### 1.4. Obtain species in TetrapodTraits according major habitat and dependence of climate

```{r}
# exclusivamente em ambientes nao-marinhos
TetraDataTerrestrial <- TetraDataHabitat %>%
  filter(EcoMar == 0 & (EcoTer == 1 | EcoFresh == 1)) %>% 
  pull(Scientific.Name)
# somente em ambientes marinhos
TetraDataMarine <- TetraDataHabitat %>%
    filter(EcoMar == 1 & EcoTer == 0 & EcoFresh == 0) %>% # exclusivamente marinhas
    pull(Scientific.Name)
# sujeitas a variaveis marinhas e terrestres
TetraTransition <- TetraDataHabitat %>%
    filter(EcoMar == 1 & (EcoTer == 1 | EcoFresh == 1)) %>%
    pull(Scientific.Name)
```

### 2. Data processing

##### 2.1. Obtain assemblage community

Terrestrial

```{r}
# Terrestres
vert_assemblages_terrestrial <- vert_assemblages %>%
 filter(Scientific.Name %in% TetraDataTerrestrial) 

# Clima para as comunidades terrestres
assemblages_terrestrial <- vert_assemblages_terrestrial %>%
 distinct(Cell_Id110) %>%
 arrange(Cell_Id110)
nrow(assemblages_terrestrial) # 15001 grids

# Pegando a media por grid
assemblages_terrestrial_climate <- left_join(
    assemblages_terrestrial,
     terrestrial_temp, 
     by = c("Cell_Id110" = "Cl_I110"))

# Tirando comunidades com NA
terrestrial_climate <- remove_missing(assemblages_terrestrial_climate) # 1738 comunidades

# Only grids with climate
vert_assemblages_terrestrial_edit <- vert_assemblages_terrestrial %>%
 filter(Cell_Id110 %in% terrestrial_climate$Cell_Id110)

# Obtain presence/ausence matrix
vert_assemblages_terrestrial_matrix <- dcast(
  data = vert_assemblages_terrestrial_edit,
  formula = Cell_Id110 ~ Scientific.Name,
  fun.aggregate = function(x) as.integer(length(x) > 0),  # 1 se presença, 0 se ausência
  value.var = "Cell_Id110",
  fill = 0  # Preenche células sem ocorrência com 0
) %>%
 arrange(Cell_Id110) %>%
 column_to_rownames(var = "Cell_Id110") 
```

Marine

```{r}
# Marine
vert_assemblages_marine <- vert_assemblages %>%
 filter(Scientific.Name %in% TetraDataMarine) 

# Clima para as comunidades terrestres
assemblages_marine <- vert_assemblages_marine %>%
 distinct(Cell_Id110)
# clima por grid 
assemblages_marine_climate <- left_join(
    assemblages_marine,
     sea_temp, 
     by = c("Cell_Id110" = "Cl_I110"))

# removing grids without climate 
marine_climate <- remove_missing(assemblages_marine_climate) %>% # 867 grids with NA
    arrange(Cell_Id110) 

# Only grids with climate
vert_assemblages_marine_edit <- vert_assemblages_marine %>%
 filter(Cell_Id110 %in% marine_climate$Cell_Id110)

# Obtain presence/ausence matrix
vert_assemblages_marine_matrix <- dcast(
  data = vert_assemblages_marine_edit,
  formula = Cell_Id110 ~ Scientific.Name,
  fun.aggregate = function(x) as.integer(length(x) > 0),  # 1 se presença, 0 se ausência
  value.var = "Cell_Id110",
  fill = 0  # Preenche células sem ocorrência com 0
) %>%
 arrange(Cell_Id110) %>%
 column_to_rownames(var = "Cell_Id110")
```

### 3. Niche metrics

##### 3.1. VIF climate variables

```{r}
# Preparing dataset
data_past <- as.data.frame(cbind(bio01 = bio01_past[,3], bio04 = bio04_past[,3], bio07 = bio07_past[,3],
                                 bio11 = bio11_past[,3], bio15 = bio15_past[,3], bio17 = bio17_past[,3]))

# VIF
v1 <- usdm::vifcor(data_past, th=0.5) # identify collinear variables that should be excluded
v1
data_past_select <- usdm::exclude(data_past,v1) # VIF < 3

# Preparing dataset
data_present <- climate_dataset %>% select(BIO01, BIO04, BIO07, BIO11, BIO12, BIO15, BIO17)

v2 <- usdm::vifcor(data_present, th=0.8) # identify collinear variables that should be excluded
v2
data_present_select <- usdm::exclude(data_present,v2) # VIF < 3
```

##### 3.2. Outlying Mean Indexes (OMI)

```{r}
# Terrestrial
dudi_terrestre <- dudi.pca(terrestrial_climate[,-1], scale = TRUE, scan = FALSE, nf = 3)
niche_terrestrial <- niche(dudi_terrestre, vert_assemblages_terrestrial_matrix, scann = FALSE) 
plot(nic_terrestrial)

# Marine
dudi_marine <- dudi.pca(marine_climate[,-1], scale = TRUE, scan = FALSE, nf = 3)
niche_marine <- niche(dudi_marine, vert_assemblages_marine_matrix, scann = FALSE) 
plot(niche_marine)

# to dataframe
niche_terrestrial_df <- as.data.frame(niche.param(niche_terrestrial))
niche_marine_df <- as.data.frame(niche.param(niche_marine))
```

### 4. Save data

```{r}
# Salvar o OMI e o Tol
write.table(niche_terrestrial_df, "02_metrics/omi_data/niche_terrestrial_df.txt", 
            sep=",", quote=FALSE, row.names = T)
write.table(niche_marine_df, "02_metrics/omi_data/niche_marine_df.txt", 
            sep=",", quote=FALSE, row.names = T)
```